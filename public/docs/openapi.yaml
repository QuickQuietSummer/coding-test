openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://backend.localhost'
paths:
  /api/requests:
    get:
      summary: 'Get all requests.'
      description: 'Only for client.'
      parameters:
        -
          in: query
          name: sort_date
          description: 'Sorting by created. Values: new, old.'
          example: deleniti
          required: false
          schema:
            type: string
            description: 'Sorting by created. Values: new, old.'
            example: deleniti
        -
          in: query
          name: sort_status
          description: 'Sorting by status. Values: active, resolved.'
          example: sunt
          required: false
          schema:
            type: string
            description: 'Sorting by status. Values: active, resolved.'
            example: sunt
        -
          in: query
          name: start
          description: "Start of date filter. Values: Carbon compatible string.\n\nFor example: 2010-1-1 00:00:00"
          example: sequi
          required: false
          schema:
            type: string
            description: "Start of date filter. Values: Carbon compatible string.\n\nFor example: 2010-1-1 00:00:00"
            example: sequi
        -
          in: query
          name: end
          description: "End of date filter. Values: Carbon compatible string.\n\nFor example: 2020-12-25 12:45:16"
          example: rerum
          required: false
          schema:
            type: string
            description: "End of date filter. Values: Carbon compatible string.\n\nFor example: 2020-12-25 12:45:16"
            example: rerum
        -
          in: query
          name: filter_status
          description: 'Filter by status. Values: active, resolved.'
          example: ratione
          required: false
          schema:
            type: string
            description: 'Filter by status. Values: active, resolved.'
            example: ratione
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/register:
    post:
      summary: 'Register client.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gqtokxpsgwpewxzyfrpkhzowagjvmjyxjfntpoeaqfxseiowbcwysmupgavogkmqmcdeldtmscvhoiilbkbdnvbzxvjehxtdpikvuxhqhyjbgccigyuzhxjhvwfjoikrainxsx
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: btrrdoonerslfrergkwzrozylxnzjcungmdfciqyeclucajissgudamrhpnbouimhkyblycduqhgypkycxjnilhpikvhfdzutxxgbtczvbeekndmpdgnmgvyjihqmjhhtxajkbrolqcphlwmmzrbatqtmvofmmaawlfzjrukymhwjpwuwthtpquvmxuclmvmafqyyloqbjtidrphyoyacy
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: aplssps
                password_confirmation:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: ab
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'Login client.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: kewgocfnuidochkmpuaiukyaurtmxyjbrmwudqlqfohbvzcjqhfqaztbjypkbbaecnklbhlyheudwbcmuqmfxtokzekdrkmnwjjnsaoqqgqksmnyhmajfhunnatdtpgarognymxzyyjmphijnpshzgsfrezzbaubpbkbhpafbsaqozgppckiqosladgvrxxqzcamtcqkosmkngxzcajq
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: tek
              required:
                - email
                - password
      security: []
tags:
  -
    name: Endpoints
    description: ''
