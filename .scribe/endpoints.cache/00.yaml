## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/requests
    metadata:
      title: 'Get all requests.'
      description: 'Only for client.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      sort_date:
        name: sort_date
        description: 'Sorting by created. Values: new, old.'
        required: false
        example: deleniti
        type: string
        custom: []
      sort_status:
        name: sort_status
        description: 'Sorting by status. Values: active, resolved.'
        required: false
        example: sunt
        type: string
        custom: []
      start:
        name: start
        description: |-
          Start of date filter. Values: Carbon compatible string.

          For example: 2010-1-1 00:00:00
        required: false
        example: sequi
        type: string
        custom: []
      end:
        name: end
        description: |-
          End of date filter. Values: Carbon compatible string.

          For example: 2020-12-25 12:45:16
        required: false
        example: rerum
        type: string
        custom: []
      filter_status:
        name: filter_status
        description: 'Filter by status. Values: active, resolved.'
        required: false
        example: ratione
        type: string
        custom: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: 'Register client.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gqtokxpsgwpewxzyfrpkhzowagjvmjyxjfntpoeaqfxseiowbcwysmupgavogkmqmcdeldtmscvhoiilbkbdnvbzxvjehxtdpikvuxhqhyjbgccigyuzhxjhvwfjoikrainxsx
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: btrrdoonerslfrergkwzrozylxnzjcungmdfciqyeclucajissgudamrhpnbouimhkyblycduqhgypkycxjnilhpikvhfdzutxxgbtczvbeekndmpdgnmgvyjihqmjhhtxajkbrolqcphlwmmzrbatqtmvofmmaawlfzjrukymhwjpwuwthtpquvmxuclmvmafqyyloqbjtidrphyoyacy
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: aplssps
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Must be at least 8 characters.'
        required: true
        example: ab
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Login client.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: kewgocfnuidochkmpuaiukyaurtmxyjbrmwudqlqfohbvzcjqhfqaztbjypkbbaecnklbhlyheudwbcmuqmfxtokzekdrkmnwjjnsaoqqgqksmnyhmajfhunnatdtpgarognymxzyyjmphijnpshzgsfrezzbaubpbkbhpafbsaqozgppckiqosladgvrxxqzcamtcqkosmkngxzcajq
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: tek
        type: string
        custom: []
    responses: []
    responseFields: []
